Ext.define("Ext.ux.GMapPanel",{extend:"Ext.panel.Panel",alias:"widget.gmappanel",requires:["Ext.window.MessageBox"],initComponent:function(){Ext.applyIf(this,{plain:true,gmapType:"map",border:false});this.callParent()},afterFirstLayout:function(){var a=this.center;this.callParent();if(a){if(a.geoCodeAddr){this.lookupCode(a.geoCodeAddr,a.marker)}else{this.createMap(a)}}else{Ext.Error.raise("center is required")}},createMap:function(a,b){var c=Ext.apply({},this.mapOptions);c=Ext.applyIf(c,{zoom:14,center:a,mapTypeId:google.maps.MapTypeId.HYBRID});this.gmap=new google.maps.Map(this.body.dom,c);if(b){this.addMarker(Ext.applyIf(b,{position:a}))}Ext.each(this.markers,this.addMarker,this);this.fireEvent("mapready",this,this.gmap)},addMarker:function(a){a=Ext.apply({map:this.gmap},a);if(!a.position){a.position=new google.maps.LatLng(a.lat,a.lng)}var b=new google.maps.Marker(a);Ext.Object.each(a.listeners,function(c,d){google.maps.event.addListener(b,c,d)});return b},lookupCode:function(b,a){this.geocoder=new google.maps.Geocoder();this.geocoder.geocode({address:b},Ext.Function.bind(this.onLookupComplete,this,[a],true))},onLookupComplete:function(c,b,a){if(b!="OK"){Ext.MessageBox.alert("Error",'An error occured: "'+b+'"');return}this.createMap(c[0].geometry.location,a)},afterComponentLayout:function(a,b){this.callParent(arguments);this.redraw()},redraw:function(){var a=this.gmap;if(a){google.maps.event.trigger(a,"resize")}}});Ext.define("Ext.ux.StoreMap",{extend:"Ext.ux.GMapPanel",alias:"widget.storemap",config:{store:null,latitudeField:"Lat",longitudeField:"Lng",markerIcon:"icon.png",currentLocationMarkerIcon:"icon.png",currentLocation:null,showCurrentLocationMarker:true,centreOnCurrentLocation:true,defaultLocation:{lat:"",lng:""},groupMarkers:true,markers:null,currentLocationMarker:null,overlayView:null},storeEventHooks:{beforeload:"onBeforeLoad",load:"onLoad",refresh:"refresh",addrecords:"onStoreAdd",removerecords:"onStoreRemove",updaterecord:"onStoreUpdate"},initialize:function(){var a=this;this.on({maprender:this.onMapRender,scope:this});this.callParent(arguments);if(a.getStore()){if(a.getMap()){a.refresh()}else{a.on({maprender:"refresh",single:true})}}},onMapRender:function(c){var b=this,a=new google.maps.OverlayView();a.draw=function(){};a.setMap(c.getMap());this.setOverlayView(a);google.maps.event.addListener(this.getMap(),"dragstart",Ext.bind(this.onMapClick,this));google.maps.event.addListener(this.getMap(),"click",Ext.bind(this.onMapClick,this))},onMapClick:function(a){this.fireEvent("maptap",this,a)},refresh:function(){var a=this;if(!this.getMap()){this.un("maprender","refresh",this);this.on("maprender","refresh",this,{delay:150,single:true})}else{a.fireAction("refresh",[a],"doRefresh")}},applyStore:function(b){var d=this,e=Ext.apply({},d.storeEventHooks,{scope:d}),c,a;if(b){b=Ext.data.StoreManager.lookup(b);if(b&&Ext.isObject(b)&&b.isStore){b.on(e);c=b.getProxy();if(c){a=c.getReader();if(a){a.on("exception","handleException",this)}}}}return b},handleException:function(){this.setMasked(false)},updateStore:function(b,e){var d=this,f=Ext.apply({},d.storeEventHooks,{scope:d}),c,a;if(e&&Ext.isObject(e)&&e.isStore){d.onStoreClear();if(e.getAutoDestroy()){e.destroy()}else{e.un(f);c=e.getProxy();if(c){a=c.getReader();if(a){a.un("exception","handleException",this)}}}}if(b){if(b.isLoaded()){this.hasLoadedStore=true}if(b.isLoading()){}if(!this.getMap()){this.un("maprender","refresh",this);this.on("maprender","refresh",this,{delay:150,single:true})}else{this.refresh()}}},getMarkers:function(){if(!this._markers){this.setMarkers(Ext.create(Ext.util.MixedCollection))}return this._markers},getMarkerIconPath:function(b){var a=this.getMarkerIcon();if(Ext.isFunction(a)){a=a.call(this,b)}return a},updateShowCurrentLocationMarker:function(a){if(a){this.updateCurrentLocation(this.getCurrentLocation())}},updateCurrentLocation:function(a,b){if(!this.getMap()){this.un("maprender","doUpdateCurrentLocation",this);this.on("maprender","doUpdateCurrentLocation",this,{delay:150,single:true,args:[a]})}else{this.doUpdateCurrentLocation(a)}},doUpdateCurrentLocation:function(a){var b=a&&a.lat&&a.lng;if(b&&this.getShowCurrentLocationMarker()){var c=this.createCurrentLocationMarker(a.lat,a.lng);this.setCurrentLocationMarker(c)}if(b&&this.getCentreOnCurrentLocation()){this.panToCurrentLocation()}},panToCurrentLocation:function(){var b=this.getCurrentLocation(),a=this.getGMLocation(b.lat,b.lng);this.setMapCenter(a)},updateCentreOnCurrentLocation:function(a){if(a===false){if(!this.getMap()){this.un("maprender","doCentreOnDefaultLocation",this);this.on("maprender","doCentreOnDefaultLocation",this,{delay:150,single:true})}else{this.doCentreOnDefaultLocation()}}},doCentreOnDefaultLocation:function(){var b=this.getDefaultLocation();if(b.lat&&b.lng){var a=this.getGMLocation(b.lat,b.lng);this.setMapCenter(a)}},updateCurrentLocationMarker:function(b,a){if(a){this.removeMarker(a)}},createCurrentLocationMarker:function(d,c){var b=this.getGMLocation(d,c);var a=new google.maps.Marker({position:b,map:this.getMap(),icon:this.getCurrentLocationMarkerIcon()});return a},onMarkerTap:function(c,b,a){this.fireEvent("markertap",this,b,a,c)},getMarkerPixelPosition:function(a){var b=this.getOverlayView().getProjection(),c=a.getPosition();return b.fromLatLngToContainerPixel(c)},doRefresh:function(c){var b=c.getStore(),a=b.getRange();this.clearMarkers();this.createMarkers(a)},destroy:function(){var a=this.getStore();if(a&&a.getAutoDestroy()){a.destroy()}this.clearMarkers();this.callParent(arguments)},onStoreClear:function(){this.clearMarkers()},onStoreAdd:function(b,a){if(a&&this.getMap()){var d=a.length,c;for(c=0;c<d;c++){this.createMarker(a[c])}}},onStoreRemove:function(b,a,e){var d=a.length,c;for(c=0;c<d;c++){this.removeMarkerByRecord(a[c])}},onStoreUpdate:function(b,a,c,d){this.updateMarker(a)},createMarkers:function(c){var d=0,b=c.length,f=this.getMarkers(),e;for(;d<b;d++){e=c[d];if(!Ext.isEmpty(e.get(this.getLatitudeField()))&&!Ext.isEmpty(e.get(this.getLongitudeField()))){f.add(e.getId(),this.createMarker(e))}else{console.log("Record has no location information")}}if(this.getGroupMarkers()){var a=new MarkerClusterer(this.getMap(),f.items)}},createMarker:function(c){var f=c.get(this.getLatitudeField()),d=c.get(this.getLongitudeField()),e=this.getMarkerIconPath(c);var b=this.getGMLocation(f,d);var a=new google.maps.Marker({position:b,map:this.getGroupMarkers()?null:this.getMap(),icon:e});google.maps.event.addListener(a,"click",Ext.bind(this.onMarkerTap,this,[c,a],true));return a},updateMarker:function(b){var a=this.getMarkerByRecord(b),d=b.get(this.getLatitudeField()),c=b.get(this.getLongitudeField());if(a){a.setPosition(this.getGMLocation(d,c));a.setIcon(this.getMarkerIconPath(b))}},clearMarkers:function(){this.getMarkers().each(function(a){this.removeMarker(a)},this);this.getMarkers().clear()},removeMarkerByRecord:function(b){var a=this.getMarkerByRecord(b);if(a){this.removeMarker(a)}},removeMarker:function(a){google.maps.event.clearInstanceListeners(a);a.setMap(null);this.getMarkers().remove(a)},getMarkerByRecord:function(a){var c=a.getId(),b=this.getMarkers();return b.getByKey(c)},getRecordByMarker:function(b){var d=this.getMarkers(),a=d.indexOf(b),c=d.keys[a];return this.getStore().getById(c)},getGMLocation:function(b,a){return new google.maps.LatLng(b,a)}});